# XONSH WIZARD START
$AUTO_SUGGEST_IN_COMPLETIONS = '1'
$LANG = "'ja_JP.utf8'"
$MOUSE_SUPPORT = '1'
source-bash "echo loading xonsh foreign shell"
#xontrib load apt_tabcomplete autojump autoxsh docker_tabcomplete jedi mpl prompt_ret_code scrapy_tabcomplete vox vox_tabcomplete avox z powerline click_tabcomplete
xontrib load prompt_ret_code vox z jedi mpl autoxsh
# XONSH WIZARD END
#
#$VIM_MODE = True
$IGNOREEOF = True
$INDENT = "    "
$CASE_SENSITIVE_COMPLETIONS = False 
$COMPLETIONS_CONFIRM = True
$HISTCONTROL = "ignoredups"
$XONSH_AUTHOPAIR = True

$AUTO_CD = True 
$AUTO_PUSHD = True 

$XONSH_SHOW_TRACEBACK = True
$XONSH_TRACEBACK_LOGFILE = "/home/shirai/log/xonsh.log" 

# 右にbranch情報
$RIGHT_PROMPT = "{curr_branch}"
# # lsコマンドの結果の見た目
$LS_COLORS="di=34:ln=35:so=32:pi=33:ex=31:bd=46;34:cd=43;34:su=41;30:sg=46;30:tw=42;30:ow=43;30"
$FOREIGN_ALIASES_SUPPRESS_SKIP_MESSAGE = True
#

aliases["l"] = "ls -ltsr"
aliases["d"] = "tree -d -L 1"


#
$COLOR_INPUT = True
$UPDATE_COMPLETIONS_ON_KEYPRESS = True

from prompt_toolkit.keys import Keys
from prompt_toolkit.filters import Condition, EmacsInsertMode, ViInsertMode
@events.on_ptk_create
def custom_keybindings(bindings, **kw):
    # prompt_toolkit 1.x
    # handler = bindings.registry.add_binding
    # prompt_toolkit 2.x
    handler = bindings.add

    @handler(Keys.ControlD)
    def say_hi(event):
        event.current_buffer.insert_text('hi')
