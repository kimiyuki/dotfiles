//symlinkだと、vscodeの設定反映に再起動が必要になるため、もう使わない
//extensionsのsettings sync で gistに設定を保存することにする
[
    {
        "key": "ctrl+enter",
        "command": "ipython.sendSelectedToIPython",
        "when": "editorTextFocus && !findInputFocussed && !replaceInputFocussed && editorLangId == 'python'"
    },
    {
        "key": "meta+l",
        "command": "-ipython.sendSelectedToIPython",
        "when": "editorTextFocus && !findInputFocussed && !replaceInputFocussed && editorLangId == 'python'"
    },
    {
        "key": "shift+enter",
        "command": "-python.execSelectionInTerminal",
        "when": "editorFocus && !findInputFocussed && !python.datascience.hascodecells && !replaceInputFocussed && editorLangId == 'python'"
    },
    {
        "key": "ctrl+2",
        "command": "-workbench.action.focusSecondEditorGroup"
    },
    {
        "key": "ctrl+2",
        "command": "workbench.action.terminal.focus"
    },
    {
        "key": "ctrl+e",
        "command": "-workbench.action.quickOpen"
    },
    {
        "key": "ctrl+tab",
        "command": "-workbench.action.openNextRecentlyUsedEditorInGroup"
    },
    {
        "key": "ctrl+p",
        "command": "-workbench.action.quickOpen"
    },
    {
        "key": "ctrl+p",
        "command": "-workbench.action.quickOpenNavigateNextInFilePicker",
        "when": "inFilesPicker && inQuickOpen"
    },
    {
        "key": "ctrl+f",
        "command": "-workbench.action.terminal.focusFindWidget",
        "when": "terminalFindWidgetFocused"
    },
    {
        "key": "ctrl+f",
        "command": "-workbench.action.terminal.focusFindWidget",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+\\",
        "command": "-workbench.action.terminal.split",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+\\",
        "command": "-workbench.action.splitEditor"
    },
    {
        "key": "ctrl+tab",
        "command": "-workbench.action.quickOpenNavigateNextInEditorPicker",
        "when": "inEditorsPicker && inQuickOpen"
    },
    {
        "key": "ctrl+alt+right",
        "command": "-workbench.action.moveEditorToNextGroup"
    },
    {
        "key": "f3",
        "command": "-workbench.action.terminal.findNext",
        "when": "terminalFindWidgetFocused"
    },
    {
        "key": "f3",
        "command": "-editor.action.nextMatchFindAction",
        "when": "editorFocus"
    },
    {
        "key": "f3",
        "command": "-workbench.action.terminal.findNextTerminalFocus",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+shift+tab",
        "command": "-workbench.action.quickOpenNavigatePreviousInEditorPicker",
        "when": "inEditorsPicker && inQuickOpen"
    },
    {
        "key": "f6",
        "command": "workbench.action.openPreviousRecentlyUsedEditorInGroup"
    },
    {
        "key": "ctrl+shift+tab",
        "command": "-workbench.action.openPreviousRecentlyUsedEditorInGroup"
    },
    {
        "key": "ctrl+tab",
        "command": "workbench.action.nextEditor"
    },
    {
        "key": "ctrl+pagedown",
        "command": "-workbench.action.nextEditor"
    },
    {
        "key": "f1",
        "command": "workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "ctrl+b",
        "command": "-workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "f1",
        "command": "-workbench.action.showCommands"
    },
    {
        "key": "f10",
        "command": "references-view.find",
        "when": "editorHasReferenceProvider"
    },
    {
        "key": "shift+alt+f12",
        "command": "-references-view.find",
        "when": "editorHasReferenceProvider"
    },
    {
        "key": "tab space",
        "command": "editor.action.triggerSuggest",
        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+space",
        "command": "-editor.action.triggerSuggest",
        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+r",
        "command": "workbench.action.debug.restart",
        "when": "inDebugMode"
    },
    {
        "key": "ctrl+shift+f5",
        "command": "-workbench.action.debug.restart",
        "when": "inDebugMode"
    },
    {
        "key": "ctrl+shift+a",
        "command": "-extension.currentAREPLSession",
        "when": "!inQuickOpen && !terminalFocus"
    },
    {
        "key": "ctrl+shift+a",
        "command": "-extension.currentAREPLSession",
        "when": "!inQuickOpen && !terminalFocus"
    },
    {
        "key": "ctrl+shift+a",
        "command": "-editor.action.blockComment",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+a",
        "command": "-extension.currentAREPLSession",
        "when": "!inQuickOpen && !terminalFocus"
    },
    {
        "key": "ctrl+shift+a",
        "command": "-extension.currentAREPLSession",
        "when": "!inQuickOpen && !terminalFocus"
    },
    {
        "key": "ctrl+shift+alt+a",
        "command": "extension.currentAREPLSession",
        "when": "!inQuickOpen && !terminalFocus"
    },
    {
        "key": "ctrl+shift+a",
        "command": "-extension.currentAREPLSession",
        "when": "!inQuickOpen && !terminalFocus"
    },
    {
        "key": "ctrl+shift+a",
        "command": "-extension.currentAREPLSession",
        "when": "!inQuickOpen && !terminalFocus"
    },
    {
        "key": "ctrl+shift+p",
        "command": "-workbench.action.showCommands"
    },
    {
        "key": "ctrl+shift+a",
        "command": "-extension.currentAREPLSession",
        "when": "!inQuickOpen && !terminalFocus"
    },
    {
        "key": "ctrl+shift+r",
        "command": "-workbench.action.openRecent"
    },
    {
        "key": "ctrl+r",
        "command": "redo"
    },
    {
        "key": "ctrl+shift+k ctrl+shift+r",
        "command": "workbench.action.keybindingsReference"
    },
    {
        "key": "ctrl+k ctrl+r",
        "command": "-workbench.action.keybindingsReference"
    },
    {
        "key": "ctrl+r",
        "command": "-workbench.action.openRecent"
    },
    {
        "key": "ctrl+r",
        "command": "-workbench.action.openRecent"
    },
    {
        "key": "ctrl+y",
        "command": "-redo",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+y",
        "command": "-redo",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+r",
        "command": "default:redo"
    },
    {
        "key": "ctrl+k ctrl+k",
        "command": "workbench.action.showCommands"
    },
    {
        "key": "ctrl+k ctrl+r",
        "command": "workbench.action.openNextRecentlyUsedEditor"
    }
]
